# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0
#spring.main.sources=com.redhat.training.jb421


# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=MyApp

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8081
management.port=8181



# management.endpoint.health.enabled = true
management.endpoint.health.show-details = always

management.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

management.endpoints.enabled-by-default = false
management.endpoint.mappings.enabled = true
management.endpoint.health.enabled = true
management.endpoint.camelhealthchecks.enabled = true


# Enable camel health indicator
camel.springboot.health.enabled = true
camel.springboot.health.context-enabled= true
camel.springboot.health.routes-enabled = true

# camel.springboot.health.config[*].parent = routes
# camel.springboot.health.config[*].enabled = true
# camel.springboot.health.config[*].interval = 5000